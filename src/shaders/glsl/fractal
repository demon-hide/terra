#line 2
uniform sampler2DArray heights;
uniform sampler2DArray slopes;
uniform sampler2D noise;
uniform float noiseWavelength;
uniform int numLayers;

const int MAX_LAYERS = 8;

struct Layer {
	float spacing;
	float padding;
	vec2 center;
	vec2 size;
	vec2 padding2;
};
uniform layersBuffer {
	Layer layers[MAX_LAYERS];
};

vec3 compute_texcoord(vec2 pos) {
	int layer = numLayers - 1;
	while(layer > 0 &&
		  any(greaterThan(abs(pos - layers[layer].center),
						  (layers[layer].size - 3*vec2(layers[layer].spacing)) * 0.5))) {
		layer -= 1;
	}
	return vec3(vec2(0.5) + (pos - layers[layer].center) / layers[layer].size, layer - 1);
}
